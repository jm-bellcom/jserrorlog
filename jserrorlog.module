<?php


/**
 * Implement hook_menu()
 *
 * We add two menu entries; one for system settings, and one for the
 * form to post to.
 *
 * We also add the JS code file for this module.
 *
 * @todo The postback URI should not be a standard Drupal path; it
 * should go to xmlrpc.php instead, in order to avoid conflicting with
 * any other nodes which occupy the same space.
 *
 */
function jserrorlog_menu( $may_cache ) {
  if ( $may_cache ) {
    $items[] = array(
      'path' => 'jserrorlog',
      'description' => t('Adjust settings for the dropdown Administration Menu.'),
      'callback' => 'jserrorlog_log_error',
      'access' => true,
      'type' => MENU_CALLBACK,
    );
    $items[] = array( 
      'path' => 'admin/settings/jserrorlog',
      'title' => t('JS Error Logging'),
      'description' => t('Record clientside JS errors on your site'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array( 'jserrorlog_admin_settings' ),
      'access' => user_access( 'administer site configuration' ),
    ) ;
    return $items ;
  } else {
    drupal_add_js( drupal_get_path('module', 'jserrorlog') . '/jserrorlog.js' );  
  }
}

/**
 * Callback function which 
 * 
 * We return some plaintext (which happens to be JSON), perform any
 * actions required by the logging settings, and then die().
 *
 * @todo I'm sure there's a better way to exit Drupal than using
 * die(). Probably moving this from a Drupal path to xmlrpc.php would
 * resolve this issue - mostly I'm just avoiding handling back a
 * themed page.
 *
 * @todo investigate whether a crafted POST to the handler could be
 * exploited in the email log method
 *
 * @todo better formatting for the outputs
 *
 * @todo don't send any message unless there's really been a submitted
 * POST
 */
function jserrorlog_log_error() {
  $methods = variable_get( 'jserrorlog_methods', array() ) ;
  if ( $methods == array() ) {
    die( "['error logging disabled']" ) ;
  }
  global $user ;
  // if we get here, then we will compose a suitable message
  $error_details = array( 
    'info' => array(
      'Page' => $_SERVER['HTTP_REFERER'],
      'File' => $_POST['file'],
      'Line' => $_POST['line'],
      'Msg ' => $_POST['message'],
    ),
    'user' => array( 
      'name' => $user->name,
      'mail' => $user->mail,
      'session' => $user->session
    ),
    'post' => $_POST, 
    'request' => $_REQUEST, 
    'server' => $_SERVER 
  ) ;
  $error_body  = print_r( $error_details, 1 ) ;
  $html_msg    = "JavaScript error recorded:<pre>" . $error_body . "</pre>" ;
  if ( in_array( 'email', $methods ) ) {
    $txt_msg     = "Javascript error recorded. Debug data follows:\n\n" . $error_body ;
    $recipient   = variable_get( 'jserrorlog_mail_address', variable_get( 'site_mail', '' ) ) ;
    $subject     = variable_get( 'site_name', '' ) . ' JS error report' ;
    drupal_mail( 'jserrorlog', $recipient, $subject, $txt_msg ) ;
  }
  if ( in_array( 'watchdog', $methods ) ) {
    watchdog( 'js error', $html_msg ) ;
  }
  die("['thanks']");
}

/**
 * Callback function to generate the admin settings form.
 *
 * Provide facility to override the email address to send reports to
 * (defaults to site address) and allow people to choose between
 * watchdog and email logging methods.
 */
function jserrorlog_admin_settings() {
  $log_methods = array( 
    'watchdog' => 'Use site logs',
    'email'    => 'Use email'
  ) ;
  $form['jserrorlog_methods'] = array( 
    '#type' => 'checkboxes',
    '#title' => t('Record JS errors via'),
    '#default_value' => variable_get( 'jserrorlog_methods', array() ),
    '#options' => $log_methods,
    '#description' => t('Which methods you wish to use for recording JS errors'),
  ) ;
  $form['jserrorlog_mail_address'] = array( 
    '#type' => 'textfield',
    '#title' => t('Email to'),
    '#default_value' => variable_get( 'jserrorlog_mail_address', variable_get( 'site_mail', '' ) ),
    '#description' => t('Email address to send JS errors to (if enabled)'),
  ) ;
  return system_settings_form($form) ;
}

// O DRUPAL GODS, PLEASE ACCEPT MY CHECKIN AND UPDATE THE 5.x-dev
// TARBALL, THANKYOU VERY MUCH, GOODNIGHT